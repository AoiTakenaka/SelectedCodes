文字起こし

[生み出す経緯]
・3カラムとか複数カラムのデザインってよくありますよね。
・そして一ページのうちに２カラムだったり、４カラムだったりカラム数が別々の時もまあまあありますよね。
・そんな時みなさんはsass(css)でどのように組んでますか？
・カラムの要素の幅をx分の１％に指定して、flex-wrapにしたり、n番目以降の要素に上余白を設ける設定をしたり、ある場合では等差数列の式を考えたり、あるいは丁度前回やっていたりして、そこからコードを探したりするかもしれません。でもちょっと大変ですよね。しかもそれがカラム数が別々の時だとそのパターンを改めて組まなきゃならない。
・自分はめんどいな〜と思いつつ別個にコツコツと組んでいましたが、ある時これ抽象化できるかも！と直感が湧きました。
・そこで研鑽たるコーディングの果てに生まれたコードがこちら↓

=========================================================
@mixin setColumn($division: 4, $marginLeft: 5%, $marginTop: $marginLeft) {
  display: flex;
  flex-wrap: wrap;
  > * {
    width: calc((100% - #{$marginLeft} * (#{$division} - 1)) / #{$division});
    &:not(:nth-child(#{$division}n + 1)) {
      margin-left: $marginLeft;
    }
    &:nth-child(n + #{$division + 1}) {
      margin-top: $marginTop;
    }
  }
}

@include setColumn(3);
=========================================================

[実現する結果]
・mixin関数の引数に「カラム数、横隣の余白、縦隣の余白」を入れるだけで任意のカラム割ができます！

=========================================================
.sample-col3 {
  ul {
    display: flex;
    flex-wrap: wrap;
  }
  li {
    width: 30%;
    &:not(:nth-child(3n + 1)) {
      margin-left: 5%;
    }
    &:nth-child(n + 4) {
      margin-top: 2.5%;
    }
  }
}
.sample-col5 {
  ul {
    display: flex;
    flex-wrap: wrap;
  }
  li {
    width: 16%;
    &:not(:nth-child(5n + 1)) {
      margin-left: 3%;
    }
    &:nth-child(n + 6) {
      margin-top: 6%;
    }
  }
}
=========================================================

これが

=========================================================
.sample-col3 {
  ul {
    @include setColumn(3, 5%, 2.5%);
  }
}
.sample-col5 {
  ul {
    @include setColumn(5, 3%, 6%);
  }
}
=========================================================

とだいぶ省略できます!

[素晴らしいと思った理由]
・以上のようにsassの記述量を減らせるし、ある程度直感的にカラムを設定できるんじゃないでしょうか。
・作ってもその時限りでしか使わないということがなく、自分が担当したページで使うことが結構あり汎用性・実用性があると言えるんじゃないでしょうか。

[補足]
・引数を省略することができます。第3引数を省略すると横余白を縦余白に当て込み、縦横等間隔の余白となります。第1・第2引数を省略してもデフォルトで、縦横5%の余白の４分割カラムになります。
・マージンのパーセントをpx,em,rem,vw...などにすることもできます。
・flex関連でこの関数に定義しているのはflex-wrapだけなので自由にカスタマイズできます。
・pc/spの使い分けはどうするのと思われるかもしれません。引数にスマホ用の枠を設けて使い分けることもできますが、その時引数の数が少なくとも６つ必要になるので意図的に実装していません。お馴染みの「@include: pc{}, @include: sp{}」で分けてやるのが良いかと思います。
・将来scss要らないムーブメントが到来し、cssのみの環境になった時、もしcssにmixin機能がなかったらこれが実装できなくなることに懸念があります。

・フリーライセンスです。お使いの際は用法容量お守りください。
・コードをhtmlに表記するのに適したプラグインとかってないですかね...？

=========================================================
.sample-col5 {
  ul {
    @include pc{
      @include setColumn(5, 3%, 6%);
    }
    @include sp{
      @include setColumn(2, 5vw);
    }
  }
}
=========================================================
